{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "getSelectOptions",
    "fullyQualifiedName": "utils.getSelectOptions",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Ecommerce Store",
    "collectionId": "Ecommerce Store_utils",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "(data, labelKey, valueKey = 'id') => {\n  let dupValues = data.map(row => {\n    return {\n      'label': row[labelKey],\n      'value': row[valueKey]\n    };\n  });\n  let output = {};\n  dupValues.forEach(option => {\n    output[option.label] = option;\n  });\n  let outputProps = Object.getOwnPropertyNames(output);\n  return outputProps.map(prop => output[prop]);\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "(data, labelKey, valueKey = 'id') => {\n  let dupValues = data.map(row => {\n    return {\n      'label': row[labelKey],\n      'value': row[valueKey]\n    };\n  });\n  let output = {};\n  dupValues.forEach(option => {\n    output[option.label] = option;\n  });\n  let outputProps = Object.getOwnPropertyNames(output);\n  return outputProps.map(prop => output[prop]);\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Ecommerce Store_utils.getSelectOptions",
  "deleted": false,
  "gitSyncId": "63c00ed3c727580240c84b23_2023-01-27T06:20:07.683111003Z"
}